plugins {
    id 'org.jetbrains.kotlin.jvm' version "1.4.21"

    id 'maven' // Could switch to maven-publish, but need to make it work.
    id 'signing'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'org.jetbrains.kotlin.jvm'

    repositories {
        mavenCentral()

        maven { url = 'https://jitpack.io' }
        maven { url = 'https://jcenter.bintray.com/' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        maven { url = 'https://libraries.minecraft.net' }
        maven { url = 'https://repo.velocitypowered.com/snapshots/' }
    }

    dependencies {
        implementation 'com.github.Minestom:Minestom:5d8ed5041f'
    }

    sourceCompatibility = '11'
    targetCompatibility = '11'

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        kotlinOptions.jvmTarget = "11"
        kotlinOptions.freeCompilerArgs = ["-Xinline-classes"]
    }
}

ext.stagingDirectory = file("${buildDir}/stage")
ext.repositoryDirectory = file("${buildDir}/repository")

configurations {
    // define a configuration just for using the nexus-ant-tasks, non-transitive as we use the uber jar
    nexusStaging {
        transitive = false
    }
}

repositories {
    maven {
        url "${sonatypeRepository}/content/groups/public"
    }
}

dependencies {
    // use the uber jar which contains all necessary dependencies already,
    // the nexusStaging scope will not be included in the pom or output artifacts
    nexusStaging group: 'org.sonatype.nexus.ant', name: 'nexus-staging-ant-tasks', version: '1.6.3', classifier: 'uber'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

group = "com.mattworzala"
archivesBaseName = "canvas"
version = "1.1.0"

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: sonatypeRepository) {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
                name 'canvas'
                packaging 'jar'
                description 'An inventory framework for Minestom'
                url 'https://github.com/mworzala/canvas'

                scm {
                    connection 'scm:https://github.com/mworzala/canvas.git'
                    developerConnection 'scm:https://github.com/mworzala/canvas.git'
                    url 'https://github.com/mworzala/canvas'
                }

                licenses {
                    license {
                        name 'MIT License'
                        url 'https://github.com/mworzala/canvas/blob/master/LICENSE.md'
                    }
                }

                developers {
                    developer {
                        id 'mworzala'
                        name 'Matt Worzala'
                        email 'admin@mattworzala.com'
                    }
                }
            }
        }
    }
}

//todo https://github.com/gradle-nexus/publish-plugin/issues/96 has an example with auto release
nexusPublishing {
    repositories {
        sonatype {
            nexusUrl = uri("https://s01.oss.sonatype.org/service/local/")
            snapshotRepositoryUrl = uri("https://s01.oss.sonatype.org/content/repositories/snapshots/")

            username = sonatypeUsername
            password = sonatypePassword

            stagingProfileId = "com.mattworzala"
        }
    }
}



